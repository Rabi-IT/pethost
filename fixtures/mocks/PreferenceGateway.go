// Code generated by mockery v2.33.2. DO NOT EDIT.

package mocks

import (
	preference_gateway "pethost/frameworks/database/gateways/preference_gateway"

	mock "github.com/stretchr/testify/mock"
)

// PreferenceGateway is an autogenerated mock type for the PreferenceGateway type
type PreferenceGateway struct {
	mock.Mock
}

// Create provides a mock function with given fields: input
func (_m *PreferenceGateway) Create(input preference_gateway.CreateInput) (string, error) {
	ret := _m.Called(input)

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(preference_gateway.CreateInput) (string, error)); ok {
		return rf(input)
	}
	if rf, ok := ret.Get(0).(func(preference_gateway.CreateInput) string); ok {
		r0 = rf(input)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(preference_gateway.CreateInput) error); ok {
		r1 = rf(input)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewPreferenceGateway creates a new instance of PreferenceGateway. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewPreferenceGateway(t interface {
	mock.TestingT
	Cleanup(func())
}) *PreferenceGateway {
	mock := &PreferenceGateway{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
